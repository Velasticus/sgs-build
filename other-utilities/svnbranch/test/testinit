#! /usr/bin/env perl
# testinit -- Creates the initial repository and working copies for the
# tests.  By default, creates them in the 'repos', 'wc', and 'wc2'
# subdirectories of the temporary directory.  If the repository
# directory exists, then just populates it with the needed
# subdirectories.  Fails if the working copies exist.

################
# Use
################

use strict;
use warnings;

# The directory containing the current program
my ($program_dir) = $0 =~ m!^(.*)/[^/]*$!;
if (!$program_dir) {
    $program_dir = ".";
}

# Load utilities
require "$program_dir/testutil.pl";

################
# Variables
################

# Import variables from testutil.pl
our($tmp_dir, $wc, $wc2);

# The repository to create or an existing one
my $repos = $ENV{"REPOS"} || escape("file://$tmp_dir/repos");

################
# Main
################

# Check for the repository and create it if necessary
my $repos_listing = `svn list $repos`;
if ($? != 0) {
    print "Repository not found, attempting to create...\n";
    if ($repos !~ m!file://(/.*)!) {
	die "Need file repository: $repos\n";
    }
    my $directory = $1;
    system("svnadmin create --fs-type fsfs $directory");
    if ($? != 0) {
	die "Error: Problem creating repository\n";
    }
} elsif ($repos_listing) {
    die "Error: Repository is not empty: $repos_listing";
} else {
    print "Using existing repository\n";
}

# Create the directory structure in the repository
system("set -x &&
	mkdir " . escape($wc) . " &&
	cd " . escape($wc) . " &&
	svn checkout $repos . &&
	svn mkdir proj1 &&
	svn mkdir proj1/trunk &&
	svn mkdir proj1/trunk/dir &&
	touch proj1/trunk/{file.txt,file2.txt} &&
	svn add proj1/trunk/{file.txt,file2.txt} &&
	svn mkdir proj1/branches &&
	svn mkdir proj2 &&
	svn mkdir proj2/trunk &&
	svn commit -m \"Create initial structure\" &&
	svn copy proj1/trunk proj1/branches/branch1 &&
	svn copy proj1/trunk proj1/branches/branch2 &&
	svn commit -m \"Create initial branches\" &&
	mkdir " . escape($wc2) . " &&
	svn checkout $repos " . escape($wc2));
if ($? != 0) {
    die "Problem creating initial structure\n";
}
